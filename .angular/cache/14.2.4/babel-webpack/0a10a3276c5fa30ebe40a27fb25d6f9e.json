{"ast":null,"code":"import { Observable, retry } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let RxjsComponent = /*#__PURE__*/(() => {\n  class RxjsComponent {\n    constructor() {\n      let i = -0;\n      const obs$ = new Observable(observer => {\n        const interval = setInterval(() => {\n          i++;\n          observer.next(i);\n\n          if (i === 4) {\n            clearInterval(interval);\n            observer.complete();\n          }\n\n          if (i === 2) {\n            i = 0;\n            observer.error('i vale 2');\n          }\n        }, 1000);\n      });\n      obs$.pipe(retry(1)).subscribe(valor => console.log(valor), err => console.warn('ERROR', err), () => console.info('Obs terminado'));\n    }\n\n    ngOnInit() {}\n\n  }\n\n  RxjsComponent.ɵfac = function RxjsComponent_Factory(t) {\n    return new (t || RxjsComponent)();\n  };\n\n  RxjsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RxjsComponent,\n    selectors: [[\"app-rxjs\"]],\n    decls: 2,\n    vars: 0,\n    template: function RxjsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"rxjs works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    encapsulation: 2\n  });\n  return RxjsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}